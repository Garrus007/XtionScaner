#pragma once

/*
Этот класс представляет абстрактную ступень конвейера.
Конвейер является основой структуры программы, а стадия конвейера - 
элементарный кирпичик ее построения. Конвейер обеспечивает гибкость и
модульность архитектуры.

Конвейер работает следующим образом:
На  вход каждоой стадии подается обрабатываемый объект.
Стадия обрабатывает его и вызывает один или более сигналов.
На эти сигналы могут быть подписаны другие стадии конвейера.
Таким образом, при подаче данных на вход первого конвейера,
они пройдут по всем. Для динамической реакции на различные изменения
параметров, каждая стадия обладает рядом методов для изменения параметров.
При смене параметров происходит перерасчет данных и передача их другим ступеням.

Класс AbsractPipelineStage осуществляет базовую функциональность и интерфейс
ступени конвейера:
- слот запуска расчета
м... ну и все
В будущем:
- сохранение, загрузка настроек из хранилища
- получение входа не только от предыдущей стадии,
  но и непосредственная загрузка из файла

Данный класс наслудется от QObject, чтобы использовать механизм
слотов и сигналов.

*/

#include <qobject.h>
#include "AbstractPipelineData.h"

class AbstractPipelineStage: QObject
{
	Q_OBJECT
public:
	AbstractPipelineStage();
	~AbstractPipelineStage();

public slots:
	
	// Принимает объект и начинает обработку
	virtual void HandleRequest(AbstractPipelineData*);

private:

};